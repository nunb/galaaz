#!/usr/bin/env ruby

dir = Dir.pwd
puts "Knitting #{dir}/#{ARGV[0]}"

code = <<EOF
eval.polyglot("ruby", "$LOAD_PATH.unshift %q(/home/rbotafogo/desenv/galaaz/lib)")
eval.polyglot("ruby", "require %q(galaaz)")
eval.polyglot("ruby", "R.install_and_loads %q(knitr)")
eval.polyglot("ruby", "R.install_and_loads %q(rmarkdown)")

# define the ruby engine for processing Ruby chunks in
# rmarkdown
eng_ruby = function(options) {
  block_code = paste(options$code, collapse = "\\n");
  code = paste0("GalaazUtil.exec_ruby(", 
                   shQuote(block_code), 
                  ")
                ");
  out = eval.polyglot("ruby", code);
  engine_output(options, block_code, out)
}

knit_engines$set(ruby = eng_ruby)

# define the rb engine for inline Ruby code
eng_rb = function(options) {
  code = paste0("GalaazUtil.exec_ruby(", 
                   shQuote(options$label), 
                  ")
                ");
  out = eval.polyglot("ruby", code)
  return(out)
}

knit_engines$set(rb = eng_rb)

# define the include engine for including Ruby files
# in place

eng_include = function(options) {
  code = paste0("GalaazUtil.inline_file(", 
                   shQuote(options$label), 
                  ")
                ");
  include = eval.polyglot("ruby", code);
  inc = paste(include, collapse = " ");
  code2 = paste0("GalaazUtil.exec_ruby(", 
                    shQuote(inc), 
                  ")
                ");
  out = eval.polyglot("ruby", code2);
  engine_output(options, inc, out)
}

knit_engines$set(include = eng_include)


rmarkdown::render("#{dir}/#{ARGV[0]}")
EOF

exec "Rscript --jvm --polyglot -e '#{code}'"
